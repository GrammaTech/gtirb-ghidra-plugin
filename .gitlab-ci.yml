stages:
  - build-and-test

default:
  image: docker.grammatech.com/rewriting/gtirb-ghidra-plugin
  tags: ["kubernetes"]

build-and-test:
  stage: build-and-test
  script:
  - echo "Building plugin..."
  # Clone GTIRB repo so you can get the Java API
  - cd ${TESTDIR}
  - git clone https://git.grammatech.com/rewriting/gtirb.git
  # Run the protocol compiler to generate Java classes from proto files
  - cd ${TESTDIR}/gtirb
  - protoc --java_out=java --proto_path=proto ./proto/*.proto
  # Run cmake to generate Java class with version information
  - mkdir ${TESTDIR}/gtirb/build
  - cd ${TESTDIR}/gtirb/build
  - cmake ../ -DGTIRB_CXX_API=OFF -DGTIRB_PY_API=OFF -DGTIRB_CL_API=OFF
  # Clone the plugin repo
  - cd ${TESTDIR}
  - git clone https://git.grammatech.com/rewriting/gtirb-ghidra-plugin.git
  # Copy in GTIRB Java API and protobuf Java lib
  - cp -r ${TESTDIR}/gtirb/java/com/grammatech/gtirb ${TESTDIR}/gtirb-ghidra-plugin/Gtirb/src/main/java/com/grammatech
  - cp ${TESTDIR}/protobuf-java-${PROTOBUF_VERSION}.jar ${TESTDIR}/gtirb-ghidra-plugin/Gtirb/lib
  # Build the plugin
  - cd ${TESTDIR}/gtirb-ghidra-plugin/Gtirb
  - gradle
  - cd ${TESTDIR}/gtirb-ghidra-plugin/Gtirb/dist
  # Install in Ghidra
  - mv *.zip ${GHIDRA_INSTALL_DIR}/Extensions/Ghidra/${GHIDRA_DOWNLOAD_VERSION}_Gtirb.zip
  - cd ${GHIDRA_INSTALL_DIR}/Ghidra/Extensions
  - unzip ../../Extensions/Ghidra/${GHIDRA_DOWNLOAD_VERSION}_Gtirb.zip
  # Run test scripts using plugin in headless mode
  - cd ${TESTDIR}/gtirb-ghidra-plugin/test
  - ./test-import test_x64.gtirb
  - ./test-import test_ia32.gtirb
  - ./test-import test_ppc32.gtirb
  - ./test-import test_arm.gtirb
