#!/bin/bash
#
# Tests whether an import was successful by looking for an expected comment in
# the gtirb file: "main of <testfilename>". If not found, test fails.
#
#
# Set defaults to values that work in the Docker image, where this is used.
#
DEFAULT_GHIDRA_INSTALL_DIR=/ghidra
DEFAULT_GHIDRA_PROJECT=/home/testdir/Project
DEFAULT_GHIDRA_FILE="test_x64.gtirb"
DEFAULT_GHIDRA_SCRIPT=DumpBookmarks.java

#
# Allow the test file to be set as a command line argument
# (supercedes environemnt variable, if there is one)
#
if [[ ! -z "$1" ]]; then
	GHIDRA_FILE=$1
fi

#
# Use these defaults if (and only if) no environment variables
#
if [[ -z "${GHIDRA_INSTALL_DIR}" ]]; then
	GHIDRA_INSTALL_DIR=${DEFAULT_GHIDRA_INSTALL_DIR}
fi

if [[ -z "${GHIDRA_PROJECT}" ]]; then
	GHIDRA_PROJECT=${DEFAULT_GHIDRA_PROJECT}
fi

if [[ -z "${GHIDRA_FILE}" ]]; then
	GHIDRA_FILE=${DEFAULT_GHIDRA_FILE}
fi

if [[ -z "${GHIDRA_SCRIPT}" ]]; then
	GHIDRA_SCRIPT=${DEFAULT_GHIDRA_SCRIPT}
fi

echo ""
echo " test-import:"
echo "    Import a file, analyze it, and check for errors"
echo "       Ghidra install dir:  ${GHIDRA_INSTALL_DIR}"
echo "       Ghidra project:      ${GHIDRA_PROJECT}"
echo "       Ghidra file:         ${GHIDRA_FILE}"
echo ""

#
# Run ghidra in headless mode
# - GHIDRA_SCRIPT is supposed to be a script that dump comments
# - allow import to overwrite any program already existing with that name
# - run analyzer
# - Dump bookmarks becuase any errors would be show up there.
HEADLESS_LAUNCH=${GHIDRA_INSTALL_DIR}/support/analyzeHeadless
PROJECT_LOCATION=`dirname ${GHIDRA_PROJECT}`
PROJECT_NAME=`basename ${GHIDRA_PROJECT}`
TESTFILE_NAME=`basename ${GHIDRA_FILE}`
SCRIPT_PATH=`dirname ${GHIDRA_SCRIPT}`
mkdir -p "${GHIDRA_PROJECT}"
if "${HEADLESS_LAUNCH}" "${PROJECT_LOCATION}" "${PROJECT_NAME}" -import "${GHIDRA_FILE}" -scriptPath "${SCRIPT_PATH}" -postScript "${GHIDRA_SCRIPT}" -overwrite | tee /dev/stderr | grep "0 error bookmarks"; then
	exit 0
else
	echo "import failed."
	exit 1
fi
